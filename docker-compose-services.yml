
services:
  nginx:
    build:
      context: .
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
      dockerfile: ${NGINX_DIR}/Dockerfile
    image: custom-nginx-alpine:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ${WWW_DIR}:/var/www/html
#      - ${NGINX_DIR}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_DIR}/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    networks:
      - app_network
    depends_on:
      - mariadb 
  php:
    build:
      context: .
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
      dockerfile: ${PHP_DIR}/Dockerfile
    image: custom-php8.4-alpine:latest
    container_name: php
    volumes:
      - ${WWW_DIR}:/var/www/html
    restart: always
    networks:
      - app_network
  mariadb:
    build:
      context: .
      dockerfile: ./mariadb/Dockerfile
    image: custom-mariadb-alpine:latest
    ports:
      - "3306:3306"
    env_file:
      - ./mariadb/mariadb.env
    container_name: mariadb
    volumes:
      - ${MYSQL_DATA}:/var/lib/mysql
    restart: always
    networks:
      - app_network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    ports:
      - "9090:9090"
    restart: always
    networks:
      - app_network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - ./grafana/grafana.env
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/data/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    restart: always
    networks:
      - app_network
    depends_on:
      - mariadb
networks:
  app_network:
    driver: bridge